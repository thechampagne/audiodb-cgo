/* Code generated by cmd/cgo; DO NOT EDIT. */

/* package command-line-arguments */


#line 1 "cgo-builtin-export-prolog"

#include <stddef.h> /* for ptrdiff_t below */

#ifndef GO_CGO_EXPORT_PROLOGUE_H
#define GO_CGO_EXPORT_PROLOGUE_H

#ifndef GO_CGO_GOSTRING_TYPEDEF
typedef struct { const char *p; ptrdiff_t n; } _GoString_;
#endif

#endif

/* Start of preamble from import "C" comments.  */


#line 3 "audiodb.go"

#include <stdlib.h>

typedef struct {
  size_t buffer_length;
  char* error;
  void* buffer;
} audiodb;

typedef struct {
  char* id_artist;
  char* id_label;
  char* int_bornyear;
  char* int_charted;
  char* int_diedyear;
  char* int_formedyear;
  char* int_members;
  char* str_artist;
  char* str_artist_alternate;
  char* str_artistbanner;
  char* str_artistclearart;
  char* str_artistcutout;
  char* str_artistfanart;
  char* str_artistfanart2;
  char* str_artistfanart3;
  char* str_artistfanart4;
  char* str_artistlogo;
  char* str_artist_stripped;
  char* str_artist_thumb;
  char* str_artist_wide_thumb;
  char* str_biographycn;
  char* str_biographyde;
  char* str_biographyen;
  char* str_biographyes;
  char* str_biographyfr;
  char* str_biographyhu;
  char* str_biographyil;
  char* str_biographyit;
  char* str_biographyjp;
  char* str_biographynl;
  char* str_biographyno;
  char* str_biographypl;
  char* str_biographypt;
  char* str_biographyru;
  char* str_biographyse;
  char* str_country;
  char* str_countrycode;
  char* str_disbanded;
  char* str_facebook;
  char* str_gender;
  char* str_genre;
  char* str_isnicode;
  char* str_label;
  char* str_lastfmchart;
  char* str_locked;
  char* str_mood;
  char* str_music_brainz_id;
  char* str_style;
  char* str_twitter;
  char* str_website;
} audiodb_artist;

typedef struct {
  char* int_year_released;
  char* str_album;
} audiodb_discography_t;

typedef struct {
  char* id_album;
  char* id_artist;
  char* id_label;
  char* int_loved;
  char* int_sales;
  char* int_score;
  char* int_score_votes;
  char* int_year_released;
  char* str_album;
  char* str_album3dcase;
  char* str_album3dface;
  char* str_album3dflat;
  char* str_album3dthumb;
  char* str_albumcdart;
  char* str_albumspine;
  char* str_albumstripped;
  char* str_albumthumb;
  char* str_albumthumbback;
  char* str_albumthumbhq;
  char* str_allmusicid;
  char* str_amazonid;
  char* str_artist;
  char* str_artist_stripped;
  char* str_bbcreviewid;
  char* str_description;
  char* str_descriptioncn;
  char* str_descriptionde;
  char* str_descriptionen;
  char* str_descriptiones;
  char* str_descriptionfr;
  char* str_descriptionhu;
  char* str_descriptionil;
  char* str_descriptionit;
  char* str_descriptionjp;
  char* str_descriptionnl;
  char* str_descriptionno;
  char* str_descriptionpl;
  char* str_descriptionpt;
  char* str_descriptionru;
  char* str_descriptionse;
  char* str_discogsid;
  char* str_geniusid;
  char* str_genre;
  char* str_itunesid;
  char* str_label;
  char* str_location;
  char* str_locked;
  char* str_lyricwikiid;
  char* str_mood;
  char* str_music_brainz_artist_id;
  char* str_music_brainz_id;
  char* str_musicmozid;
  char* str_rate_your_music_id;
  char* str_release_format;
  char* str_review;
  char* str_speed;
  char* str_style;
  char* str_theme;
  char* str_wikidataid;
  char* str_wikipediaid;
} audiodb_album;

typedef struct {
  char* id_album;
  char* id_artist;
  char* id_imvdb;
  char* id_lyric;
  char* id_track;
  char* int_cd;
  char* int_duration;
  char* int_loved;
  char* int_music_vid_comments;
  char* int_music_vid_dislikes;
  char* int_music_vid_favorites;
  char* int_music_vid_likes;
  char* int_music_vid_views;
  char* int_score;
  char* int_scorevotes;
  char* int_total_listeners;
  char* int_totalplays;
  char* int_tracknumber;
  char* str_album;
  char* str_artist;
  char* str_artist_alternate;
  char* str_descriptioncn;
  char* str_descriptionde;
  char* str_descriptionen;
  char* str_descriptiones;
  char* str_descriptionfr;
  char* str_descriptionhu;
  char* str_descriptionil;
  char* str_descriptionit;
  char* str_descriptionjp;
  char* str_descriptionnl;
  char* str_descriptionno;
  char* str_descriptionpl;
  char* str_descriptionpt;
  char* str_descriptionru;
  char* str_descriptionse;
  char* str_genre;
  char* str_locked;
  char* str_mood;
  char* str_music_brainz_album_id;
  char* str_music_brainz_artist_id;
  char* str_music_brainz_id;
  char* str_musicvid;
  char* str_music_vid_company;
  char* str_music_vid_director;
  char* str_music_vid_screen1;
  char* str_music_vid_screen2;
  char* str_music_vid_screen3;
  char* str_style;
  char* str_theme;
  char* str_track;
  char* str_track3dcase;
  char* str_tracklyrics;
  char* str_trackthumb;
} audiodb_track;

typedef struct {
  char* id_album;
  char* id_artist;
  char* id_track;
  char* str_descriptionen;
  char* str_musicvid;
  char* str_track;
  char* str_trackthumb;
} audiodb_music_video;

#line 1 "cgo-generated-wrapper"


/* End of preamble from import "C" comments.  */


/* Start of boilerplate cgo prologue.  */
#line 1 "cgo-gcc-export-header-prolog"

#ifndef GO_CGO_PROLOGUE_H
#define GO_CGO_PROLOGUE_H

typedef signed char GoInt8;
typedef unsigned char GoUint8;
typedef short GoInt16;
typedef unsigned short GoUint16;
typedef int GoInt32;
typedef unsigned int GoUint32;
typedef long long GoInt64;
typedef unsigned long long GoUint64;
typedef GoInt64 GoInt;
typedef GoUint64 GoUint;
typedef __SIZE_TYPE__ GoUintptr;
typedef float GoFloat32;
typedef double GoFloat64;
typedef float _Complex GoComplex64;
typedef double _Complex GoComplex128;

/*
  static assertion to make sure the file is being used on architecture
  at least with matching size of GoInt.
*/
typedef char _check_for_64_bit_pointer_matching_GoInt[sizeof(void*)==64/8 ? 1:-1];

#ifndef GO_CGO_GOSTRING_TYPEDEF
typedef _GoString_ GoString;
#endif
typedef void *GoMap;
typedef void *GoChan;
typedef struct { void *t; void *v; } GoInterface;
typedef struct { void *data; GoInt len; GoInt cap; } GoSlice;

#endif

/* End of boilerplate cgo prologue.  */

#ifdef __cplusplus
extern "C" {
#endif

extern __declspec(dllexport) audiodb* audiodb_search_artist(char* s);
extern __declspec(dllexport) void audiodb_artist_clean(audiodb_artist* self);
extern __declspec(dllexport) audiodb* audiodb_discography(char* s);
extern __declspec(dllexport) void audiodb_discography_clean(audiodb_discography_t** self, int length);
extern __declspec(dllexport) audiodb* audiodb_search_artist_by_id(int i);
extern __declspec(dllexport) audiodb* audiodb_search_album_by_id(int i);
extern __declspec(dllexport) void audiodb_album_clean(audiodb_album* self);
extern __declspec(dllexport) audiodb* audiodb_search_albums_by_artist_id(int i);
extern __declspec(dllexport) void audiodb_albums_clean(audiodb_album** self, int length);
extern __declspec(dllexport) audiodb* audiodb_search_track_by_id(int i);
extern __declspec(dllexport) void audiodb_track_clean(audiodb_track* self);
extern __declspec(dllexport) audiodb* audiodb_search_tracks_by_album_id(int i);
extern __declspec(dllexport) void audiodb_tracks_clean(audiodb_track** self, int length);
extern __declspec(dllexport) audiodb* audiodb_search_music_videos_by_artist_id(int i);
extern __declspec(dllexport) void audiodb_music_video_clean(audiodb_music_video** self, int length);

#ifdef __cplusplus
}
#endif
